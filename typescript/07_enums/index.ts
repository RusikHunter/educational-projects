// –ü—Ä–∏–º–µ—Ä: –±–µ–∑ enum

const ADMIN = "ADMIN"
const USER = "USER"
const GUEST = "GUEST"

function checkRole(role: string) {
    if (role === ADMIN) {
        // ...
    }
}

// –¢–æ –∂–µ —Å enum:

enum Role {
    Admin = "ADMIN",
    User = "USER",
    Guest = "GUEST"
}

function checkRoleWithEnum(role: Role) {
    if (role === Role.Admin) {
        // –í—Å—ë —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!
    }
}

enum Status {
    Pending,  // 0
    InProgress, // 1
    Done  // 2
}

let s: Status = Status.InProgress // 1

enum Status2 {
    Pending = 1,
    InProgress,  // 2
    Done         // 3
}

enum Color {
    Red = "RED",
    Green = "GREEN",
    Blue = "BLUE"
}

let c: Color = Color.Green // "GREEN"

// 3. –ì–µ—Ç–µ—Ä–æ–≥–µ–Ω–Ω—ã–µ enum (—Å–º–µ—à–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã) ‚Äî ‚ùå –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è

enum Weird {
    Yes = "YES",
    No = 0
}

// üìõ –¢–∞–∫–∏–µ enum –≤–æ–∑–º–æ–∂–Ω—ã, –Ω–æ —á–∏—Ç–∞—é—Ç—Å—è —Ö—É–∂–µ, –ø–æ—ç—Ç–æ–º—É —Å—Ç–∞—Ä–∞–π—Å—è –∏–∑–±–µ–≥–∞—Ç—å.


// –û–±—Ä–∞—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ —É —á–∏—Å–ª–æ–≤—ã—Ö enum)

enum Direction {
    Up,
    Down
}

console.log(Direction.Up)     // 0
console.log(Direction[0])     // "Up" ‚Äî –æ–±—Ä–∞—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ

// üìå –≠—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö enum!



// functions

enum LogLevel {
    Info,
    Warning,
    Error
}

function log(message: string, level: LogLevel) {
    if (level === LogLevel.Error) {
        console.error(message)
    } else if (level === LogLevel.Warning) {
        console.warn(message)
    } else {
        console.log(message)
    }
}

log("Something went wrong!", LogLevel.Warning)


const enum Direction2 {
    Up,
    Down,
    Left,
    Right
}

let move = Direction.Up

// enum vs union types
// –ò–Ω–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å enum –Ω–∞ union:

type Role123 = "admin" | "user" | "guest"

// ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ union-—Ç–∏–ø–æ–≤:

// ‚úÖ –º–µ–Ω—å—à–µ –∫–æ–¥–∞ –≤ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º JS

// ‚úÖ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫ –≤ IDE

// –ø—Ä–∞–∫—Ç–∏–∫–∞

enum OrderStatus {
    Pending,
    Shipped,
    Delivered,
    Cancelled
}

function isFinalStatus(status: OrderStatus): boolean {
    return status === OrderStatus.Delivered || status === OrderStatus.Cancelled
}