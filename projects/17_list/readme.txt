Задача:

Создать приложение, которое отображает список товаров. Пользователь может добавлять, удалять, и фильтровать товары, используя ввод и кнопки. В приложении должны быть реализованы следующие темы:

JSX-синтаксис: компоненты, элементы, вложенность. +
Пропсы: передача данных между компонентами. +
Условный рендеринг: отображение различных элементов в зависимости от условий. +
Преобразование массива в JSX через метод map. +
Основные хуки:
useState для состояния, +
useEffect для эффекта при загрузке данных, +
useRef для работы с неуправляемым вводом, +
useMemo + и useCallback для оптимизации.
React Context API: для управления глобальным состоянием фильтров.
React Portal API: для модального окна (например, подтверждения удаления товара).
React Router: для переключения между страницами, например, "Список товаров" и "О приложении". +
Базовая файловая структура
plaintext
Копировать код
src/
│
├── components/
│   ├── Header.jsx           # Шапка приложения
│   ├── ProductList.jsx      # Список товаров
│   ├── ProductItem.jsx      # Один товар
│   ├── Modal.jsx            # Компонент модального окна
│   └── About.jsx            # Страница "О приложении"
│
├── context/
│   └── FilterContext.jsx    # Контекст для фильтрации
│
├── pages/
│   ├── HomePage.jsx         # Главная страница с товарами
│   └── AboutPage.jsx        # Страница "О приложении"
│
├── App.jsx                  # Главный компонент приложения
├── index.jsx                # Точка входа
└── styles.css               # Стили приложения
Пошаговое задание
Создайте компонент App с маршрутизацией:

Используйте react-router для переключения между страницами.
Создайте два пути: / для списка товаров и /about для страницы "О приложении".
Реализуйте компонент Header:

Отобразите ссылки для навигации между страницами.
Передавайте ссылки через пропсы.
Создайте компонент ProductList:

Используйте useState для хранения массива товаров.
Добавьте метод map для преобразования товаров в JSX.
Добавьте функционал фильтрации:

Используйте React Context API для хранения состояния фильтра.
Примените фильтр для отображения только тех товаров, которые соответствуют запросу пользователя.
Реализуйте функционал добавления/удаления товаров:

Используйте useRef для доступа к полю ввода при добавлении товара.
Сделайте модальное окно через React Portal API для подтверждения удаления.
Добавьте оптимизацию:

Используйте useMemo для мемоизации списка товаров.
Примените useCallback для методов добавления и удаления товаров.
Создайте страницу "О приложении":

Добавьте описание проекта и автора.